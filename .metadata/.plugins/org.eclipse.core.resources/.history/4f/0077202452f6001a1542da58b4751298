package exception21;

import java.io.IOException;

public class ExceptionBasicApp {

	public static void main(String[] args) {
		/*
		 1] 컴파일 에러(Checked Exception):
		  			- 컴파일시 발생하는 에러
		  			- Syntax erorr(문법 오류), IOException(예외클래스),SQLException(예외클래스) 등
		  			- 컴파일이 안되면 실행이 안됨
		  			- 컴파일 에러(외부자원 사용시 발생하는 컴파일 에러 : IOException,SQLException)는 던지거나
		  			     직접 처리(try~catch절)할 수 있다
		  			     단 Syntax error(문법오류)는 직접 수정해야함 
		 */
		//1-1]Syntax(문법오류)
		//Int num;[x]
		int num;//[o]
		if(true); {}
		//else {}[x]else는 항상 if와 짝을 이루어야 한다
		//1-2]외부 자원 사용시 발생하는 예외
		//		해결책 : 예외를 던지거나(throw절)나 직접 처리(try~catch절 사용)
		//방법1]예외던지기
		//	호출한 메소드() throws 예외클래스{}
		//System.in.read();
		//방법2]try~catch절
		/*
		try {
			System.in.read();
		} 
		catch (IOException e) {
			e.printStackTrace();
		}*/
		
		/*
		 2]런타임에러(Unchecked Exception)
		 - 컴파일시에는 체크가 안됨 실행시에만 발생되는 에러
		 - Runtime Exception계열(NullPointerException,ArithmeticException,ArrayIndexOutOfBoundsException등)
		 - main메소드에서는 throw해도 오류발생
		 	즉 직접처리(try~catch절 사용)해야만 한다
		 	
		 #예외 발생시 JVM은 해당 예외클래스를 인스턴스화 해서 예외객체를 프로그램 쪽에 전달한다
		 */
		
		//[ArrayIndexOutOfBoundsException]:
		// 배열의 크기를 벗어난 인덱스 사용시
		int[] array = new int[2];
		array[0] = 100;
		System.out.println("array[0] :"+array[0]);
		array[1] = 200;
		System.out.println("array[1] :"+array[1]);
		array[2] = 300;
		System.out.println("array[2] :"+array[2]);

	}//////main

}/////////class
