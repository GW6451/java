/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2020-11-17 03:14:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Core;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class CSS_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/Kosmo/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp4/wtpwebapps/JQueryProj/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1604477667001L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>CSS.jsp</title>\r\n");
      out.write("<!-- jQuery사용을 위한 라이브러리 임베딩 -->\r\n");
      out.write("<!-- 1]다운 받은 .js파일 임베디드 -->\r\n");
      out.write("<!-- \r\n");
      out.write("<script src=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"></script>\r\n");
      out.write(" -->\r\n");
      out.write("<!-- 2]CDN(Content Delivery Network)주소 사용 -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t//factory함수*(나중에 배움)\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t//[속성값 읽기] - css(\"css의 속성명\")\r\n");
      out.write("\t\t$('#get').on('click',function(){\r\n");
      out.write("\t\t\tvar div = $('div');\r\n");
      out.write("\t\t\tvar width = div.css('width');\r\n");
      out.write("\t\t\tvar height = div.css('height');\r\n");
      out.write("\t\t\tconsole.log('가로폭:%s,세로폭:%s',width,height);\r\n");
      out.write("\t\t\t//css속성명 그대로..\r\n");
      out.write("\t\t\t//var back = div.css('background-color');\r\n");
      out.write("\t\t\t//자바스크립트 접근 방식으로\r\n");
      out.write("\t\t\tvar back = div.css('backgroundColor');\r\n");
      out.write("\t\t\tconsole.log('배경색:%s,%s',back,div.get(0).style.backgroundColor);\r\n");
      out.write("\t\t\t$('span').html('결과값:가로폭-'+width+',세로폭-'+height+',배경색-'+back);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t//[속성값 설정]- css('속성명','설정할 값')\r\n");
      out.write("\t\t$('#set').click(function(){\r\n");
      out.write("\t\t\t//메소드 체인으로]\r\n");
      out.write("\t\t\t//$('div').css('width','200px').css('height','200px').css('backgroundColor','skyblue');\r\n");
      out.write("\t\t\t//JSON타입으로\r\n");
      out.write("\t\t\t$('div').css({width:'150px','height':'150px',\"background-color\":\"skyblue\"});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tvar aTag = $('a').click(function(){});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar pTag = $('#article');\r\n");
      out.write("\t\t$('a').click(function(){\r\n");
      out.write("\t\t\t//클릭시 현재글자 크기 얻기\r\n");
      out.write("\t\t\tvar fontSize = parseInt(pTag.css('font-size'));\r\n");
      out.write("\t\t\tswitch($(this).html()){\r\n");
      out.write("\t\t\tcase '크게' : pTag.css('font-size',fontSize+5+'px'); break;\r\n");
      out.write("\t\t\tcase '작게' : pTag.css('font-size',fontSize-5+'px'); break;\r\n");
      out.write("\t\t\tcase '진하게' : pTag.css('font-weight','bold'); break;\r\n");
      out.write("\t\t\tcase '보통' : pTag.css('font-weight','normal'); break;\r\n");
      out.write("\t\t\tcase '빨강' : pTag.css('color','red'); break;\r\n");
      out.write("\t\t\tcase '그린' : pTag.css('color','green'); break;\r\n");
      out.write("\t\t\tcase '검정' : pTag.css('color','black'); break;\r\n");
      out.write("\t\t\tcase '빨강' : pTag.css('color','red'); break;\r\n");
      out.write("\t\t\tcase '기울이기' : pTag.css('font-style','italic'); break;\r\n");
      out.write("\t\t\tdefault : pTag.css('font-style','normal');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\t$('a:eq(0)').click(function(){\r\n");
      out.write("\t\t\t$('p').css('font-size','1.2em');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('a:eq(1)').click(function(){\r\n");
      out.write("\t\t\t$('p').css('font-size','0.8em');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('a:eq(2)').click(function(){\r\n");
      out.write("\t\t\t$('p').css('font-weight','bold');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('a:eq(3)').click(function(){\r\n");
      out.write("\t\t\t$('p').css('font-weight','normal');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('a:eq(4)').click(function(){\r\n");
      out.write("\t\t\t$('p').css('color','red');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('a:eq(5)').click(function(){\r\n");
      out.write("\t\t\t$('p').css('color','green');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('a:eq(6)').click(function(){\r\n");
      out.write("\t\t\t$('p').css('color','black');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('a:eq(7)').click(function(){\r\n");
      out.write("\t\t\t$('p').css('font-style','iteric');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('a:eq(8)').click(function(){\r\n");
      out.write("\t\t\t$('p').css('font-weight','bold');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<fieldset>\r\n");
      out.write("\t\t<legend>string css(\"css속성명\"),jQuery css(\"css속성명\",\"속성값\")</legend>\r\n");
      out.write("\t\t​ <span style=\"color: purple; font-size: 1.5em\">결과값:</span>\r\n");
      out.write("\t\t<div style=\"width: 100px; height: 100px; background-color: pink\"></div>\r\n");
      out.write("\t\t<button id=\"get\">속성값 읽기</button>\r\n");
      out.write("\t\t<button id=\"set\">속성값 설정</button>\r\n");
      out.write("\t\t<hr />\r\n");
      out.write("\t\t<a href=\"#\">크게</a> | <a href=\"#\">작게</a> | <a href=\"#\">진하게</a> |\r\n");
      out.write("\t\t<a href=\"#\">보통</a> | <a href=\"#\">빨강</a> | <a href=\"#\">그린</a> |\r\n");
      out.write("\t\t<a href=\"#\">검정</a> | <a href=\"#\">기울이기</a> | <a href=\"#\">똑바로</a>\r\n");
      out.write("\t\t<p id=\"article\" style=\"font-size: 12px\">\r\n");
      out.write("\t\t\t기사 내용입니다<br />\r\n");
      out.write("\t\t\t기사 내용입니다<br />\r\n");
      out.write("\t\t\t기사 내용입니다<br />\r\n");
      out.write("\t\t\t기사 내용입니다<br />\r\n");
      out.write("\t\t\t기사 내용입니다<br />\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t</fieldset>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /Core/CSS.jsp(12,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/js/jquery-3.5.1.js");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
