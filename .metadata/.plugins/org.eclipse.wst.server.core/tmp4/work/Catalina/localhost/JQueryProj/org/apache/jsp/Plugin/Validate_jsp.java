/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2020-11-19 08:36:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Plugin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Validate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/Kosmo/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp4/wtpwebapps/JQueryProj/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1604477667001L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Validate.jsp</title>\r\n");
      out.write("<!-- jQuery사용을 위한 라이브러리 임베딩 -->\r\n");
      out.write("<!-- 1]다운 받은 .js파일 임베디드 -->\r\n");
      out.write("<!-- \r\n");
      out.write("<script src=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"></script>\r\n");
      out.write(" -->\r\n");
      out.write("<!-- 2]CDN(Content Delivery Network)주소 사용 -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<!-- 제이쿼리 유효성 검증용 플러그인 -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/jquery-validation@1.19.2/dist/jquery.validate.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$.validator.setDefaults({submitHandler:function(formObj){\r\n");
      out.write("\t\t\t//submit하기 전 수행할 로직\r\n");
      out.write("\t\t\talert('전송하기전 수행할 일');\r\n");
      out.write("\t\t\t//반드시 submit()함수 호출\r\n");
      out.write("\t\t\tformObj.submit();\r\n");
      out.write("\t\t}});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//1]input type=\"submit\"버튼 일때\r\n");
      out.write("\t\t$('#frm').validate({\r\n");
      out.write("\t\t\trules:{\r\n");
      out.write("\t\t\t\tname:'required',\r\n");
      out.write("\t\t\t\tid:{required:true,minlength:3,maxlength:6},\r\n");
      out.write("\t\t\t\tpwd:{required:true,minlength:5},\r\n");
      out.write("\t\t\t\tpwd2:{required:true,minlength:5,equalTo:'#pwd'},\r\n");
      out.write("\t\t\t\tinter:{required:true,minlength:2},\r\n");
      out.write("\t\t\t\tgender:'required',\r\n");
      out.write("\t\t\t\tsel:'required',\r\n");
      out.write("\t\t\t\tfile:'required',\r\n");
      out.write("\t\t\t\tself:'required'\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tmessages:{\r\n");
      out.write("\t\t\t\tname:'이름을 입력하세요',\r\n");
      out.write("\t\t\t\tid:{required:\"아이디를 입력하세요\",minlength:\"아이디는 3자 이상\",maxlength:\"아이디는 6자이하\"},\r\n");
      out.write("\t\t\t\tpwd:{required:\"비밀번호를 입력하세요\",minlength:\"비밀번호는 5자 이상\"},\r\n");
      out.write("\t\t\t\tpwd2:{required:\"비밀번호확인을 입력하세요\",minlength:\"비밀번호는 5자 이상\",equalTo:\"비밀번호가 불일치합니다\"},\r\n");
      out.write("\t\t\t\tinter:{required:\"관심사항을 선택하세요\",minlength:\"2개 이상 선택\"},\r\n");
      out.write("\t\t\t\tgender:\"성별을 선택하세요\",\r\n");
      out.write("\t\t\t\tsel:'학력을 선택하세요',\r\n");
      out.write("\t\t\t\tfile:'파일을 선택하세요',\r\n");
      out.write("\t\t\t\tself:'자기소개를 입력하세요'\r\n");
      out.write("\t\t\t}});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t$(':button').click(function(){\r\n");
      out.write("\t\t\t\tif($('#frm').valid()) $('#frm').submit();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- https://jqueryvalidation.org/ -->\r\n");
      out.write("\t<fieldset>\r\n");
      out.write("\t\t<legend>제이쿼리의 플러그인을 사용한 유효성체크</legend>\r\n");
      out.write("\t\t<span style=\"color: red; font-size: 1.8em\"></span>\r\n");
      out.write("\t\t<form method=\"post\" action=\"http://www.nate.com\" id=\"frm\">\r\n");
      out.write("\t\t\t이름:<input type=\"text\" name=\"name\" /><br />\r\n");
      out.write("\t\t\t<label for=\"id\">아이디:</label>\r\n");
      out.write("\t\t\t<input type=\"text\" value=\"\" name=\"id\" id=\"id\" /><br />\r\n");
      out.write("\t\t\t비밀번호:<input type=\"password\" name=\"pwd\" id=\"pwd\" /><br />\r\n");
      out.write("\t\t\t비밀번호 확인:<input type=\"password\" name=\"pwd2\" /><br />\r\n");
      out.write("\t\t\t관심분야: \r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" name=\"inter\" value=\"A\" id=\"pol\" />정치\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" name=\"inter\" value=\"B\" /> 경제\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" name=\"inter\" value=\"C\" /> 스포츠\r\n");
      out.write("\t\t\t<!--\r\n");
      out.write("체크박스나 라디오버튼은 에러 메시지가\r\n");
      out.write("첫번째 체크박스 나 첫번째 라디오버튼 다음에\r\n");
      out.write("표시됨.\r\n");
      out.write("label태그를 이용해서 특정 위치(단,form태그안에서만)에\r\n");
      out.write("에러메시지를 뿌려 줄 수 있다.\r\n");
      out.write("​\r\n");
      out.write("for속성:name 속성에 지정한 값\r\n");
      out.write("class속성:반드시 \"error\" 문자열\r\n");
      out.write("-->\r\n");
      out.write("\t\t\t​ <label for=\"inter\" class=\"error\"></label> <br /> 성별: 남자<input\r\n");
      out.write("\t\t\t\ttype=\"radio\" name=\"gender\" value=\"man\" /> 여자<input type=\"radio\"\r\n");
      out.write("\t\t\t\tname=\"gender\" value=\"woman\" /> <label for=\"gender\" class=\"error\"></label><br />\r\n");
      out.write("\t\t\t​\r\n");
      out.write("\t\t\t<!-- \r\n");
      out.write("option태그의 value속성에 빈 문자열(\"\")을\r\n");
      out.write("설정하면 선택 하지 않은 것으로 간주한다.\r\n");
      out.write("​\r\n");
      out.write("-->\r\n");
      out.write("\t\t\t<select name=\"sel\">\r\n");
      out.write("\t\t\t\t<option value=\"\">==학력을 선택하세요==</option>\r\n");
      out.write("\t\t\t\t<option value=\"uni\">대학교</option>\r\n");
      out.write("\t\t\t\t<option value=\"high\">고등학교</option>\r\n");
      out.write("\t\t\t\t<option value=\"middle\">중학교</option>\r\n");
      out.write("\t\t\t\t<option value=\"ele\">초등학교</option>\r\n");
      out.write("\t\t\t</select><br /> <input type=\"file\" name=\"file\" /><br /> 자기소개<br />\r\n");
      out.write("\t\t\t<textarea name=\"self\" cols=\"50\" rows=\"5\"></textarea>\r\n");
      out.write("\t\t\t<br /> <input type=\"button\" value=\"button타입\" /> <input\r\n");
      out.write("\t\t\t\ttype=\"submit\" value=\"submit타입\" /> <input type=\"reset\" value=\"취소\" />\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</fieldset>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /Plugin/Validate.jsp(12,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/js/jquery-3.5.1.js");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
